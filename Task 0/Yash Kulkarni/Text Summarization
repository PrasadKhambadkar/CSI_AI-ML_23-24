import torch
from transformers import T5Tokenizer, T5ForConditionalGeneration
from textblob import TextBlob
import tkinter as tk
# initialize the pretrained model
import sentencepiece
model = T5ForConditionalGeneration.from_pretrained('t5-small')
tokenizer = T5Tokenizer.from_pretrained('t5-small')
device = torch.device('cpu')
root = tk.Tk()
root.title("Text Summarizer")
root.geometry('1200x600')
textlabel = tk.Label(root, text="Text")
textlabel.pack()
text = tk.Text(root, height=15, width=140)
text.pack()
slabel = tk.Label(root, text="Summary")
slabel.pack()

summary_text = tk.Text(root, height=5, width=140)
summary_text.config(state='disabled', bg='#dddddd')
summary_text.pack()
selabel = tk.Label(root, text="Sentiment Analysis")
selabel.pack()
sentiment_analysis = tk.Text(root, height=1, width=140)
sentiment_analysis.config(state='disabled',bg='#dddddd')
sentiment_analysis.pack()
def summarize():
    # Input text
    input_text = text.get('1.0', "end").strip()
    
    # Preprocess the input text
    preprocessed_text = input_text.strip().replace('\n', '')
    t5_input_text = 'summarize: ' + preprocessed_text
    
    # Tokenize and generate summary
    tokenized_text = tokenizer.encode(t5_input_text, return_tensors='pt', max_length=512, truncation=True).to(device)
    summary_ids = model.generate(tokenized_text, min_length=30, max_length=120)
    summary = tokenizer.decode(summary_ids[0], skip_special_tokens=True)
    
    # Perform sentiment analysis
    analysis = TextBlob(summary)
    sentiment = f'Sentiment: {"positive" if analysis.polarity > 0 else "negative" if analysis.polarity < 0 else "neutral"}'
    
    # Update the summary text widget
    summary_text.config(state='normal')
    summary_text.delete('1.0', "end")
    summary_text.insert("insert", summary)
    summary_text.config(state='disabled', bg='#dddddd')
    
    # Update the sentiment analysis text widget
    sentiment_analysis.config(state='normal')
    sentiment_analysis.delete('1.0', "end")
    sentiment_analysis.insert("insert", sentiment)
    sentiment_analysis.config(state='disabled', bg='#dddddd')
btn = tk.Button(root, text="Summarize", command=summarize)
btn.pack()

root.mainloop()

